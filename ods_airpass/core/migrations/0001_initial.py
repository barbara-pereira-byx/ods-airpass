# Generated by Django 5.1.2 on 2024-11-20 17:19

import core.models
import django.core.validators
import django.db.models.deletion
import django.utils.timezone
import uuid
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Passageiro',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nome', models.CharField(default='Passageiro Padrão', max_length=100, validators=[django.core.validators.MinLengthValidator(2), django.core.validators.MaxLengthValidator(100)], verbose_name='Nome do Passageiro')),
                ('data_nascimento', models.DateField(verbose_name='Data de nascimento')),
                ('cpf_passaporte', models.CharField(max_length=20, unique=True, validators=[core.models.validar_cpf_passaporte], verbose_name='CPF/Passaporte do Passageiro')),
                ('email', models.EmailField(max_length=255, unique=True, validators=[django.core.validators.MinLengthValidator(5), django.core.validators.MaxLengthValidator(255), core.models.validar_email], verbose_name='E-mail do Passageiro')),
                ('genero', models.SmallIntegerField(choices=[(0, 'Masculino'), (1, 'Feminino'), (3, 'Agênero'), (4, 'Genderqueer'), (5, 'Outro'), (6, 'Prefiro não informar')], verbose_name='Gênero do Passageiro')),
                ('nacionalidade', models.CharField(max_length=100, validators=[django.core.validators.MinLengthValidator(2), django.core.validators.MaxLengthValidator(100)], verbose_name='Nacionalidade do Passageiro')),
                ('frequencia_voos', models.IntegerField(blank=True, default=0, help_text='Quantidade de vezes que o cliente já realizou algum vôo', null=True, validators=[django.core.validators.MinValueValidator(0)], verbose_name='Frequência de Vôos')),
            ],
            options={
                'verbose_name': 'Passageiro',
                'verbose_name_plural': 'Passageiros',
            },
        ),
        migrations.CreateModel(
            name='Voo',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('origem', models.CharField(default='Desconhecida', max_length=100, validators=[django.core.validators.MaxLengthValidator(100)], verbose_name='Origem do Voo')),
                ('destino', models.CharField(default='Desconhecido', max_length=100, validators=[django.core.validators.MaxLengthValidator(100)], verbose_name='Destino do Voo')),
                ('numero', models.IntegerField(default=1, validators=[django.core.validators.MinValueValidator(1)], verbose_name='Número do Voo')),
                ('status', models.SmallIntegerField(choices=[(0, 'Agendado'), (1, 'Em Andamento'), (2, 'Atrasado'), (3, 'Cancelado'), (4, 'Concluido')], default=0, verbose_name='Status do Voo')),
            ],
            options={
                'verbose_name': 'Voo',
                'verbose_name_plural': 'Voos',
            },
        ),
        migrations.CreateModel(
            name='Funcionario',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('nome', models.CharField(default='Funcionário Padrão', max_length=100, verbose_name='Nome do Funcionário')),
                ('data_nascimento', models.DateField(verbose_name='Data de nascimento')),
                ('cpf', models.CharField(help_text='Login do Funcionário', max_length=80, unique=True, verbose_name='CPF do Funcionário')),
                ('email', models.EmailField(max_length=255, unique=True, verbose_name='E-mail do Funcionário')),
                ('cargo', models.SmallIntegerField(choices=[(0, 'Agente de Reservas'), (1, 'Agente de Atendimento ao Cliente'), (2, 'Supervisor de Operações de Reservas'), (3, 'Gerente de Vendas')], default=0, verbose_name='Cargo do Funcionário')),
                ('numero_identificacao', models.UUIDField(default=uuid.uuid4, unique=True, verbose_name='Identificador Único')),
                ('is_active', models.BooleanField(default=True)),
                ('is_staff', models.BooleanField(default=False)),
                ('supervisor', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='subordinados', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Funcionário',
                'verbose_name_plural': 'Funcionários',
            },
        ),
        migrations.CreateModel(
            name='Reserva',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('data_reserva', models.DateTimeField(default=django.utils.timezone.now, validators=[core.models.validar_data_reserva], verbose_name='Data/hora da Reserva')),
                ('preco', models.FloatField(default=0.0, validators=[django.core.validators.MinValueValidator(0)], verbose_name='Preço da Reserva')),
                ('assento', models.IntegerField(default=1, validators=[django.core.validators.MinValueValidator(1)], verbose_name='Assento Reservado')),
                ('classe', models.SmallIntegerField(choices=[(0, 'Econômica'), (1, 'Executiva'), (2, 'Primeira Classe'), (3, 'Classe Business'), (4, 'Classe Econômica Superior')], default=1, verbose_name='Classe da Reserva')),
                ('funcionario', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL, verbose_name='Funcionário que criou a reserva')),
                ('passageiro', models.ForeignKey(help_text='Passageiro que fez a reserva', null=True, on_delete=django.db.models.deletion.SET_NULL, to='core.passageiro', verbose_name='Passageiro')),
                ('voo', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='core.voo', verbose_name='Voo Reservado')),
            ],
            options={
                'verbose_name': 'Reserva',
                'verbose_name_plural': 'Reservas',
            },
        ),
        migrations.CreateModel(
            name='Piloto',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nome', models.CharField(default='Piloto Padrão', max_length=100, validators=[django.core.validators.MinLengthValidator(2), django.core.validators.MaxLengthValidator(100)], verbose_name='Nome do Piloto')),
                ('data_nascimento', models.DateField(verbose_name='Data de nascimento')),
                ('email', models.EmailField(max_length=255, unique=True, validators=[django.core.validators.MinLengthValidator(5), django.core.validators.MaxLengthValidator(255)], verbose_name='E-mail do Piloto')),
                ('numero_licenca', models.CharField(default='LICENCA123', max_length=20, unique=True, validators=[django.core.validators.MinLengthValidator(5), django.core.validators.MaxLengthValidator(20), django.core.validators.RegexValidator('^[a-zA-Z0-9]*$', 'A licença deve conter apenas caracteres alfanuméricos.')], verbose_name='Número da Licença do Piloto')),
                ('voo', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='core.voo', verbose_name='Voo')),
            ],
            options={
                'verbose_name': 'Piloto',
                'verbose_name_plural': 'Pilotos',
            },
        ),
        migrations.CreateModel(
            name='Aviao',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('capacidade', models.IntegerField(default=150, help_text='Quantidade de pessoas que o avião suporta', validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(850)], verbose_name='Capacidade do Avião')),
                ('modelo', models.CharField(default='Modelo Padrão', max_length=100, validators=[django.core.validators.MinLengthValidator(2), django.core.validators.MaxLengthValidator(100)], verbose_name='Modelo do Avião')),
                ('nome_companhia', models.CharField(default='Companhia Padrão', max_length=150, validators=[django.core.validators.MinLengthValidator(2), django.core.validators.MaxLengthValidator(150)], verbose_name='Nome da Companhia do Avião')),
                ('voo', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='core.voo', verbose_name='Voo')),
            ],
            options={
                'verbose_name': 'Avião',
                'verbose_name_plural': 'Aviões',
            },
        ),
    ]
